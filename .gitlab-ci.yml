stages:
  - buildlib
  - buildtests
  - runtests

build-asi-dftbp:
  image: registry.gitlab.com/pvst/asi/debian-dftbp
  stage: buildlib
  script:
    - export CORES_NUMBER=`lscpu | awk -- '/Core\(s\) per socket/{C = $NF} /Socket/{S = $NF} END{print S*C}'`
    - export INSTALL_PREFIX=${CI_PROJECT_DIR}/install
    - export DFTBP_INCLUDE=${HOME}/opt/dftbp/include
    - make -j $CORES_NUMBER
    - make install
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - install/

build-dftbp-tests:
  image: registry.gitlab.com/pvst/asi/debian-dftbp
  stage: buildtests
  script:
    - cd tests
    - export CORES_NUMBER=`lscpu | awk -- '/Core\(s\) per socket/{C = $NF} /Socket/{S = $NF} END{print S*C}'`
    - export ASI_HOME=${CI_PROJECT_DIR}/install
    - export DFTBP_LIB_DIR=${HOME}/opt/dftbp/lib
    - make -j $CORES_NUMBER dftbp_tests

build-aims-tests:
  image: registry.gitlab.com/pvst/asi/debian-aims
  stage: buildtests
  script:
    - cd tests
    - export CORES_NUMBER=`lscpu | awk -- '/Core\(s\) per socket/{C = $NF} /Socket/{S = $NF} END{print S*C}'`
    - export ASI_HOME=${CI_PROJECT_DIR}/install
    - export AIMS_DIR=${HOME}/aims/build-so
    - export AIMS_LIB="-laims"
    - make -j $CORES_NUMBER aims_tests
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - tests/build

run-aims-tests:
  image: registry.gitlab.com/pvst/asi/debian-aims
  stage: runtests
  script:
    - cd tests/testcases
    - export OMPI_ALLOW_RUN_AS_ROOT=1
    - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/aims/build-so/:${HOME}/aims/build-so/subdirectory_aims1/build/
    - export MPIEXEC="mpiexec --allow-run-as-root "
    - ./run_aims_tests.sh


